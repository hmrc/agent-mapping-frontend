# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.frontend.FrontendModule"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Custom error handler
play.http.errorHandler = "ErrorHandler"

appName = "agent-mapping-frontend"
play.http.router = prod.Routes

play.i18n.langs = ["en", "cy"]

play.filters.enabled += play.filters.csp.CSPFilter

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  confidenceLevel = 50
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

mongodb {
  uri = "mongodb://localhost:27017/agent-mapping-frontend"
  session.expireAfterSeconds = 3600 //1 hour
}

microservice {
    metrics {
        graphite {
            legacy = false
        }
    }

    services {
      auth {
        host=localhost
        port=8500
      }

      agent-mapping {
        host=localhost
        port=9439
      }
      agent-services-account-frontend {
        external-url="http://localhost:9401"
      }

      company-auth-frontend {
        external-url = "http://localhost:9025"
      }

      agent-subscription {
        host = localhost
        port = 9436
      }

      agent-mapping-frontend{
        external-url = "http://localhost:9438"
      }

      agent-subscription-frontend {
        external-url = "http://localhost:9437"
      }
    }
}

metrics {
    enabled = true
}

google-analytics {
  token=N/A
  host=auto
}

tracking-consent-frontend {
  gtm.container = "b"
}

contact-frontend {
  host = "http://localhost:9250"
  serviceId = "AOSS"
}

timeoutDialog { //time until popup = timeout-seconds - timeout-countdown-seconds
  timeout-seconds=900
  timeout-countdown-seconds=120
}

features {
  enable-welsh-toggle = true
}

login.continue = "http://localhost:9438"
bas-gateway.url = "http://localhost:9553/bas-gateway/sign-in"

clientCount.maxRecords = 5 // ensure this is the same in agent-mapping

accessibility-statement.service-path = "/agent-mapping"
